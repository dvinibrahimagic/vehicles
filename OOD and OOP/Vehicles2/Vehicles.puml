@startuml

' main class
class Vehicle {
    + string LicensePlate { get; }
    + string Type { get; }
    + abstract double CalculateTime(double distance, RoadType condition);
}

abstract class MotorizedVehicle {
    + EnergySource EnergySource
    + double BaseSpeed { get; }
    + double BaseConsumption { get; }
    + double FuelCapacity { get; }
    + double CurrentFuel { get; private set; }
    + double CalculateConsumption(double distance, RoadType roadType)
    + double Drive(double distance, RoadType roadType)
    + void Refuel(double amount)
}

class PassengerVehicle
class MaterialVehicle
class Bicycle

MotorizedVehicle <|-- PassengerVehicle
MotorizedVehicle <|-- MaterialVehicle
Vehicle <|-- MotorizedVehicle
Vehicle <|-- Bicycle

' enums
enum RoadType {
    City
    Highway
    Backroad
    Offroad
}

enum EnergySource {
    Gasoline
    Diesel
    Electric
}

' def gas station
class GasStation {
    + string Name
    - List<EnergySource> AvailableFuelTypes
    + void Refuel(MotorizedVehicle vehicle, double amount)
}

' def journey sim
class JourneySimulator {
    + void SimulateJourney(Vehicle vehicle, List<(double distance, RoadType roadType)> segments)
}

' collabs
GasStation --> MotorizedVehicle : "Refuels"
JourneySimulator --> Vehicle : "Simulates Journey"

@enduml
